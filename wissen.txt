37th
----

class Employee {

String firstName;
String lastName;



}


class FirstCompare implements Comaprator{

 boolean comapare(String name){
 
	return name.equals(firstName);
 
 }

}

class Driver{

public static void main(String[] args){


List e1;

FirstCompare firstCompare = new FirstCompare();

Collections.sort();



}


}



class A {
public void synchronized m1() {
Thread.sleep(5000);}
}

A a1 = new A();
A a2 = new A();

a1.m1();

a2.m1();
threadScheduler
a1 before a2


list.stream().filter( n -> n%2 !=0)
			 .map(s -> s*s)
			 .sum();
			 
234 -> 3

1012 -> 3

Set<Integer> numbers = new HashSet<>(0,1,2,3,4,5,6,7,8,9);
int count = 0;

while(n > 0){

i = n%10;

numbers.forEach(s -> {
if(s == i)
count++;

set.remove(s);

});

n = n/10;

}


System.out.println(count);

1,2,4,6,7,8
[2,1,6,4,8,7]
k=2

int last = list.get(list.size()-1);

for(int i=0; i<list.size(); i++){

int j = i+1;
if( ( list.get(i) - last  <= k ) {
if((list.get(i) - list.get(j)) == k){
	System.out.println(i + ", " + i+1);
} 

}




}

}




