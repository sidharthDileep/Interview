HappiestMinds
---------------
90th
------

Employee e1 = new Employee(1, "A", 30000);
Employee e2 = new Employee(2, "B", 30000);
Employee e3 = new Employee(1, "A", 25000);

@Override
public boolean equals(Employee e){

if(e.getId() == this.getId() && e.getName().equals(this.getName()))
	return true;
	
return false;

}

@Override
public int hashCode(){

return hash(this.getId);

}

List

Collection.sort(list, new SalaryComparator);

Collection.sort(list, (e1, e2) -> {

return e2.getSalary().compareTo(e1.getSalary());

});



public class SalaryComparator implements Comparator<Employee>{

public int compareTo(Employee e1, Employee e2){

return e2.getSalary().compareTo(e1.getSalary());

}

}






id name and salary


String str = "abcabcabchfabc";

String subStr = "abc"


count: 4


int count = 0;
for(int i=0; i<str.length; i++){

if(i < str.length - 4){
if(str.subString(i,i+3).equals(subStr)){
	count++;
		}
	}


}


product
id name description price category_id

category
id name

SELCET p.name, c.name FROM product p JOIN category c ON p.category_id = c.id;

category name and no of products in that category

SELECT c.name, count(*) FROM product p JOIN category c ON c.id = p.category_id GROUP BY c.name;
